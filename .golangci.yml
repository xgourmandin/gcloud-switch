linters:
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - gofmt
    - goimports
    - misspell
    - gocritic
    - revive
    - gosec
    - unconvert
    - unparam

linters-settings:
  govet:
    check-shadowing: true
  gofmt:
    simplify: true
  goimports:
    local-prefixes: gcloud-switch
  misspell:
    locale: US
  revive:
    confidence: 0.8

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - errcheck
        - gosec
    # Exclude logger from error checking (intentional design)
    - path: internal/logger/
      linters:
        - errcheck
  max-issues-per-linter: 0
  max-same-issues: 0

run:
  timeout: 5m
  tests: true
  skip-dirs:
    - .github
    - .idea
  skip-files:
    - ".*_test\\.go$"
name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

  release:
    name: Release with GoReleaser
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

